// Generated by view binder compiler. Do not edit!
package com.tflite.DeteksipenyakittanamanMn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.priyankvasa.android.cameraviewex.CameraView;
import com.tflite.DeteksipenyakittanamanMn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPendeteksiBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CameraView camera;

  @NonNull
  public final TextView capturePhoto;

  @NonNull
  public final TextView infoBar;

  @NonNull
  public final TextView predictionBar;

  @NonNull
  public final TextView processNameBar;

  @NonNull
  public final TextView processTimeBar;

  @NonNull
  public final TextView resultBar;

  private ActivityPendeteksiBinding(@NonNull ConstraintLayout rootView, @NonNull CameraView camera,
      @NonNull TextView capturePhoto, @NonNull TextView infoBar, @NonNull TextView predictionBar,
      @NonNull TextView processNameBar, @NonNull TextView processTimeBar,
      @NonNull TextView resultBar) {
    this.rootView = rootView;
    this.camera = camera;
    this.capturePhoto = capturePhoto;
    this.infoBar = infoBar;
    this.predictionBar = predictionBar;
    this.processNameBar = processNameBar;
    this.processTimeBar = processTimeBar;
    this.resultBar = resultBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPendeteksiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPendeteksiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pendeteksi, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPendeteksiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.camera;
      CameraView camera = ViewBindings.findChildViewById(rootView, id);
      if (camera == null) {
        break missingId;
      }

      id = R.id.capturePhoto;
      TextView capturePhoto = ViewBindings.findChildViewById(rootView, id);
      if (capturePhoto == null) {
        break missingId;
      }

      id = R.id.info_bar;
      TextView infoBar = ViewBindings.findChildViewById(rootView, id);
      if (infoBar == null) {
        break missingId;
      }

      id = R.id.prediction_bar;
      TextView predictionBar = ViewBindings.findChildViewById(rootView, id);
      if (predictionBar == null) {
        break missingId;
      }

      id = R.id.process_name_bar;
      TextView processNameBar = ViewBindings.findChildViewById(rootView, id);
      if (processNameBar == null) {
        break missingId;
      }

      id = R.id.process_time_bar;
      TextView processTimeBar = ViewBindings.findChildViewById(rootView, id);
      if (processTimeBar == null) {
        break missingId;
      }

      id = R.id.result_bar;
      TextView resultBar = ViewBindings.findChildViewById(rootView, id);
      if (resultBar == null) {
        break missingId;
      }

      return new ActivityPendeteksiBinding((ConstraintLayout) rootView, camera, capturePhoto,
          infoBar, predictionBar, processNameBar, processTimeBar, resultBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
